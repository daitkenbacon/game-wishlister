{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daitk\\\\Documents\\\\GitHub\\\\salad-wishlister\\\\salad-interview\\\\src\\\\pages\\\\wishlist-page\\\\WishlistPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport apiKey from \"../../salad-config.json\";\nimport \"./WishlistPage.scss\";\nimport Header from \"../../components/header/Header\";\nimport SkeletonCards from \"../../components/skeleton-cards-list/SkeletonCardsList\";\nimport FilteredCardsList from \"../../components/filtered-cards-list/FilteredCardsList\";\nimport WishlistCardsList from \"../../components/wishlist-cards-list/WishlistCardsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WishlistPage = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [gameCards, setGameCards] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [wishlist, setWishlist] = useState([]);\n  const [isShowAll, setIsShowAll] = useState(true);\n  const today = new Date();\n  const nextDate = new Date();\n  nextDate.setDate(nextDate.getDate() + 1);\n  useEffect(() => {\n    const loadData = () => {\n      axios({\n        //Fetches games releasing between current day and one year + one day from now\n        method: \"GET\",\n        url: `https://api.rawg.io/api/games?key=${apiKey[\"key\"]}&dates=${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()},${nextDate.getFullYear() + 1}-${nextDate.getMonth() + 1}-${nextDate.getDate()}`\n      }).then(res => {\n        setError(\"\");\n        setGameCards(res.data.results);\n      }).catch(err => {\n        setError(err.message);\n      }).finally(() => {\n        //After data fetches, sort games by release date\n        setGameCards(oldState => oldState.sort((a, b) => {\n          const aDate = parseInt(a.released.split(\"-\").join(\"\"), 10);\n          const bDate = parseInt(b.released.split(\"-\").join(\"\"), 10);\n          return aDate - bDate;\n        }));\n        console.log(apiKey['key'], gameCards);\n        setLoading(false);\n      });\n    };\n    loadData();\n  }, []);\n  const removeWishlistItem = id => {\n    let filteredArray = wishlist.filter(item => item !== id);\n    setWishlist(filteredArray);\n  };\n  const addWishlistItem = id => {\n    setWishlist([...wishlist, id]);\n  };\n  const handleWishlistClick = id => {\n    //If game already wishlisted, remove; if not, add\n\n    !wishlist.includes(id) && addWishlistItem(id);\n    wishlist.includes(id) && removeWishlistItem(id);\n  };\n  const handleShowAllToggle = () => {\n    setIsShowAll(!isShowAll);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      handleShowAllToggle: handleShowAllToggle,\n      wishlist_length: wishlist.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wishlist-cards-container\",\n      children: [\n      //Render full list of games only if page loaded and \"show all\" is checked\n      !loading && isShowAll && /*#__PURE__*/_jsxDEV(WishlistCardsList, {\n        handleWishlistClick: handleWishlistClick,\n        gameCards: gameCards,\n        wishlist: wishlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this),\n      //Render filtered list only if page loaded and \"show all\" is unchecked\n      !loading && !isShowAll && /*#__PURE__*/_jsxDEV(FilteredCardsList, {\n        handleWishlistClick: handleWishlistClick,\n        gameCards: gameCards,\n        wishlist: wishlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this),\n      //If no wishlisted items and \"show all\" unchecked, show message\n      !isShowAll && wishlist.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No wishlisted items!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 50\n      }, this),\n      //If page is loading, render skeleton cards\n      loading && /*#__PURE__*/_jsxDEV(SkeletonCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(WishlistPage, \"K8Cwp6Ie86x/jgwS50VZDN14hUk=\");\n_c = WishlistPage;\nexport default WishlistPage;\nvar _c;\n$RefreshReg$(_c, \"WishlistPage\");","map":{"version":3,"names":["useEffect","useState","axios","apiKey","Header","SkeletonCards","FilteredCardsList","WishlistCardsList","WishlistPage","loading","setLoading","gameCards","setGameCards","error","setError","wishlist","setWishlist","isShowAll","setIsShowAll","today","Date","nextDate","setDate","getDate","loadData","method","url","getFullYear","getMonth","then","res","data","results","catch","err","message","finally","oldState","sort","a","b","aDate","parseInt","released","split","join","bDate","console","log","removeWishlistItem","id","filteredArray","filter","item","addWishlistItem","handleWishlistClick","includes","handleShowAllToggle","length"],"sources":["C:/Users/daitk/Documents/GitHub/salad-wishlister/salad-interview/src/pages/wishlist-page/WishlistPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport apiKey from \"../../salad-config.json\";\r\n\r\nimport \"./WishlistPage.scss\";\r\n\r\nimport Header from \"../../components/header/Header\";\r\n\r\nimport SkeletonCards from \"../../components/skeleton-cards-list/SkeletonCardsList\";\r\nimport FilteredCardsList from \"../../components/filtered-cards-list/FilteredCardsList\";\r\nimport WishlistCardsList from \"../../components/wishlist-cards-list/WishlistCardsList\";\r\n\r\nexport interface GameData {\r\n  id: number;\r\n  name: string;\r\n  released: string;\r\n  background_image: string;\r\n}\r\n\r\nconst WishlistPage: React.FC<{}> = () => {\r\n  const [loading, setLoading] = useState<Boolean>(true);\r\n  const [gameCards, setGameCards] = useState<GameData[]>([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [wishlist, setWishlist] = useState<Number[]>([]);\r\n  const [isShowAll, setIsShowAll] = useState<Boolean>(true);\r\n\r\n  const today = new Date();\r\n  const nextDate = new Date();\r\n  nextDate.setDate(nextDate.getDate() + 1);\r\n\r\n  useEffect(() => {\r\n    const loadData = () => {\r\n      axios({\r\n        //Fetches games releasing between current day and one year + one day from now\r\n        method: \"GET\",\r\n        url: `https://api.rawg.io/api/games?key=${apiKey[\"key\"]}&dates=${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()},${nextDate.getFullYear() + 1}-${nextDate.getMonth() + 1}-${nextDate.getDate()}`\r\n      })\r\n        .then((res) => {\r\n          setError(\"\");\r\n          setGameCards(res.data.results);\r\n        })\r\n        .catch((err) => {\r\n          setError(err.message);\r\n        })\r\n        .finally(() => {\r\n          //After data fetches, sort games by release date\r\n          setGameCards((oldState) =>\r\n            oldState.sort((a, b) => {\r\n              const aDate = parseInt(a.released.split(\"-\").join(\"\"), 10);\r\n              const bDate = parseInt(b.released.split(\"-\").join(\"\"), 10);\r\n              return aDate - bDate;\r\n            })\r\n          );\r\n          console.log(apiKey['key'], gameCards);\r\n          setLoading(false);\r\n        });\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  const removeWishlistItem = (id: number) => {\r\n    let filteredArray = wishlist.filter((item) => item !== id);\r\n    setWishlist(filteredArray);\r\n  };\r\n\r\n  const addWishlistItem = (id: number) => {\r\n    setWishlist([...wishlist, id]);\r\n  };\r\n\r\n  const handleWishlistClick = (id: number) => {\r\n    //If game already wishlisted, remove; if not, add\r\n\r\n    !wishlist.includes(id) && addWishlistItem(id);\r\n    wishlist.includes(id) && removeWishlistItem(id);\r\n  };\r\n\r\n  const handleShowAllToggle = () => {\r\n    setIsShowAll(!isShowAll);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Header\r\n        handleShowAllToggle={handleShowAllToggle}\r\n        wishlist_length={wishlist.length}\r\n      />\r\n\r\n      {error && <p>{error}</p>}\r\n      <div className=\"wishlist-cards-container\">\r\n        {\r\n          //Render full list of games only if page loaded and \"show all\" is checked\r\n          !loading && isShowAll && (\r\n            <WishlistCardsList\r\n              handleWishlistClick={handleWishlistClick}\r\n              gameCards={gameCards}\r\n              wishlist={wishlist}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          //Render filtered list only if page loaded and \"show all\" is unchecked\r\n          !loading && !isShowAll && (\r\n            <FilteredCardsList\r\n              handleWishlistClick={handleWishlistClick}\r\n              gameCards={gameCards}\r\n              wishlist={wishlist}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          //If no wishlisted items and \"show all\" unchecked, show message\r\n          !isShowAll && wishlist.length === 0 && <h1>No wishlisted items!</h1>\r\n        }\r\n        {\r\n          //If page is loading, render skeleton cards\r\n          loading && <SkeletonCards />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WishlistPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}